declare upper;

input show1m  = yes;
input show5m  = yes;
input show15m = yes;
input show30m = yes;
input show60m = yes;

# Time tracking from market open (9:30 AM)
def secondsFromOpen = SecondsFromTime(0929);
def minFromOpen     = Floor(secondsFromOpen / 60);

# === 1-Minute Open Range Logic ===
def range1Start  = 1;
def is1mReady    = minFromOpen == range1Start;

def range1High = if BarNumber() < 1 then Double.NaN
                 else if is1mReady then high
                 else range1High[1];

def range1Low  = if BarNumber() < 1 then Double.NaN
                 else if is1mReady then low
                 else range1Low[1];

def range1Broken = if minFromOpen < range1Start then 0
                   else if close > range1High or close < range1Low then 1
                   else range1Broken[1];

# Track first break
def wasBroken     = range1Broken[1];
def firstBreak    = range1Broken and !wasBroken;
def notYetBroken  = !range1Broken and !wasBroken;

# Record bar count at time of break
def plotRangeBarsNumber = if firstBreak then minFromOpen + 1
                          else if notYetBroken then minFromOpen
                          else plotRangeBarsNumber[1];

def isVisible1 = minFromOpen >= range1Start and minFromOpen <= plotRangeBarsNumber;

# === Plotting ===
plot High1 = if isVisible1 and show1m then range1High else Double.NaN;
plot Low1  = if isVisible1 and show1m then range1Low  else Double.NaN;

High1.SetDefaultColor(Color.BLUE);
Low1.SetDefaultColor(Color.BLUE);
High1.SetLineWeight(2);
Low1.SetLineWeight(2);