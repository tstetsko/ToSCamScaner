input show1m  = yes;
input show5m  = yes;
input show15m = yes;
input show30m = yes;
input show60m = yes;

# Time tracking from market open (9:30 AM)
def secondsFromOpen = SecondsFromTime(0929);
def minFromOpen     = Floor(secondsFromOpen / 60);

# === Generic Range Logic Function ===
script OpenRange {
    input rangeDuration  = 0;
    input minFromOpen    = 0;
    input high           = 0;
    input low            = 0;
    input close          = 0;

    def rangeStartMins   = 1;

    def inRange      = minFromOpen >= rangeStartMins and minFromOpen < (rangeStartMins + rangeDuration);
    def isBeforeRange  = minFromOpen < rangeStartMins;


    def rangeHigh = if isBeforeRange then 0
                    else if inRange then Max(high, rangeHigh[1])
                    else rangeHigh[1];

    def rangeLow  = if isBeforeRange then 10000
                    else if inRange then Min(low, rangeLow[1] )
                    else rangeLow[1];

    def broken       = if isBeforeRange then 0
                       else if close > rangeHigh or close < rangeLow then 1
                       else broken[1];

    def wasBroken    = broken[1];
    def firstBreak   = broken and !wasBroken;
    def notBrokenYet = !broken and !wasBroken;

    def rangeBarsEnd = if firstBreak then minFromOpen + 1
                       else if notBrokenYet then minFromOpen
                       else rangeBarsEnd[1];

    def visible      = minFromOpen >= rangeDuration and minFromOpen <= rangeBarsEnd;


    plot HighPlot    = if visible then rangeHigh else Double.NaN;
    plot LowPlot     = if visible then rangeLow  else Double.NaN;
}

# 1 Minute Range (9:30 - 9:31)
def range1High = OpenRange(1, minFromOpen, high, low, close).HighPlot;
def range1Low  = OpenRange(1, minFromOpen, high, low, close).LowPlot;

plot High1  = if show1m then range1High else Double.NaN;
plot Low1   = if show1m then range1Low  else Double.NaN;

# 5 Minute Range (9:30 - 9:35)
def range5High = OpenRange(5, minFromOpen, high, low, close).HighPlot;
def range5Low  = OpenRange(5, minFromOpen, high, low, close).LowPlot;

plot High5 = if show5m then range5High else Double.NaN;
plot Low5  = if show5m then range5Low  else Double.NaN;

# === Styling ===
High1.SetDefaultColor(Color.BLACK);
High1.SetLineWeight(2);
Low1.SetDefaultColor(Color.BLACK);
Low1.SetLineWeight(2);

High5.SetDefaultColor(Color.BLUE);
High5.SetLineWeight(2);
Low5.SetDefaultColor(Color.BLUE);
Low5.SetLineWeight(2);