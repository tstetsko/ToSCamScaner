input show1m  = yes;
input show5m  = yes;
input show15m = yes;
input show30m = yes;
input show60m = yes;

# Time tracking from market open (9:30 AM)
def secondsFromOpen = SecondsFromTime(0929);
def minFromOpen     = Floor(secondsFromOpen / 60);

# === Generic Range Logic Function ===
script OpenRange {
    input rangeStartMins = 0;
    input minFromOpen    = 0;
    input high           = 0;
    input low            = 0;
    input close          = 0;

    def isReady      = minFromOpen == rangeStartMins;
    def highLevel    = if BarNumber() < 1 then Double.NaN
                       else if isReady then high
                       else highLevel[1];

    def lowLevel     = if BarNumber() < 1 then Double.NaN
                       else if isReady then low
                       else lowLevel[1];

    def broken       = if minFromOpen < rangeStartMins then 0
                       else if close > highLevel or close < lowLevel then 1
                       else broken[1];

    def wasBroken    = broken[1];
    def firstBreak   = broken and !wasBroken;
    def notBrokenYet = !broken and !wasBroken;

    def rangeBarsEnd = if firstBreak then minFromOpen + 1
                       else if notBrokenYet then minFromOpen
                       else rangeBarsEnd[1];

    def visible      = minFromOpen >= rangeStartMins and minFromOpen <= rangeBarsEnd;

    plot HighPlot    = if visible then highLevel else Double.NaN;
    plot LowPlot     = if visible then lowLevel  else Double.NaN;
}

# === 1 Minute Range ===
def start1m = 1;
def range1High  = OpenRange(start1m, minFromOpen, high, low, close).HighPlot;
def range1Low  = OpenRange(start1m, minFromOpen, high, low, close).LowPlot;
plot High1  = if show1m then range1High else Double.NaN;
plot Low1   = if show1m then range1Low  else Double.NaN;

# === Styling ===
High1.SetDefaultColor(Color.BLACK);   High1.SetLineWeight(2);
Low1.SetDefaultColor(Color.BLACK);    Low1.SetLineWeight(2);

