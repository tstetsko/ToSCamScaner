# Thor's Camarilla Pivot Points 
# Wiinii
# v1.5
# Based on Thor's book 'A Complete Day Trading System' to include R5 & S5, levels colored accordingly, CAMS with pre-market data, Central Pivot + Floor Pivots 3&4, and label to easily tell you if you should use With or W/O Premarket Data and option only to show the cams based on that!
# Some code based on code by SleepyZ & Nube
# https://usethinkscript.com/threads/pivot-day-trading-system-for-thinkorswim.12988/
# now with Thor's defaults

declare once_per_bar;

input aggregationPeriod = {default "DAY", "WEEK", "MONTH"};
input length = 1;
input ShowBubbles = yes;
input ShowPricesInBubbles = yes;
input locate_bubbles_at = {default Expansion, Time};
input locate_bubbles_at_time = 600;
input BarsFromExpansion = 2;
input PMD_Indicator_Label = yes;
input ShowCams = {default "Both", "w/o Only", "Auto", "w/Only"};
input hide_Floor_Pivots = no;
input hide_s4a_r4a = yes;
input hide_s1_r1 = yes;
input hide_s2_r2 = yes;
input hide_s5_r5 = no;
input lines = {default horizontal, dashes, points, triangles, squares};
input HasNoGlobeX = no;

Assert(length > 0, "'length' should be positive: " + length);

def timeopen = SecondsFromTime(locate_bubbles_at_time) == 0;
def isExpansion = locate_bubbles_at == locate_bubbles_at.Expansion and IsNaN(close);
def firstExpansionBar = if !IsNaN(close[-1]) and isExpansion then 1 else if isExpansion then firstExpansionBar[1] + 1 else 0;
def BubbleLocation = if locate_bubbles_at == locate_bubbles_at.Time then timeopen else isExpansion and firstExpansionBar == BarsFromExpansion;

def yyyymmdd = GetYYYYMMDD();
def month = GetYear() * 12 + GetMonth();
def day_number = DaysFromDate(First(yyyymmdd)) + GetDayOfWeek(First(yyyymmdd));
def period;
switch (aggregationPeriod) {
case DAY:
    period = CountTradingDays(Min(First(yyyymmdd), yyyymmdd), yyyymmdd) - 1;
case WEEK:
    period = Floor(day_number / 7);
case MONTH:
    period = Floor(month - First(month));
}
def count = CompoundValue(1, if period != period[1] then (count[1] + period - period[1]) % length else count[1], 0);
def start =  CompoundValue(1, count < count[1] + period - period[1], yes);
def highValue = if start then Highest(high(period = aggregationPeriod), length)[1] else if highValue[1] != 0 then highValue[1] else Double.NaN;
def lowValue = if start then Lowest(low(period = aggregationPeriod), length)[1] else if lowValue[1] != 0 then lowValue[1] else Double.NaN;
def closeValue = if start then close(period = aggregationPeriod)[1] else closeValue[1];
def range = highValue - lowValue;

#PMD Indicator Label on Chart ----------------------------------------------

def na = Double.NaN;
def bn = BarNumber();
def h  = high;
def l  = low;

script prior {
# subscript for getting prior value of a BarNumber() defined variable
    input prior = close;
    def   priorOf = if prior != prior[1] then prior[1] else priorOf[1];
    plot  priorBar = priorOf;
}
 
   # variables
def cb   = HighestAll(if !IsNaN(h) then bn else na);
def time = GetTime();
def rts  = RegularTradingStart(GetYYYYMMDD());
def rte  = RegularTradingEnd(GetYYYYMMDD());

def RTH = if time crosses above rts
          then bn else if time <= rts then bn else RTH[1];

def globex = if time crosses below rte
             then bn else globex[1];

def priorRTH    = prior(RTH);
def priorGlobex = prior(globex);

def hRTH  = HighestAll(RTH);
def hGX   = HighestAll(globex);
def hPRTH = HighestAll(priorRTH);
def hPGX  = HighestAll(priorGlobex);

def gXhigh = HighestAll(if   bn >= hGX && bn < hRTH
                        then h else if hRTH < hGX && bn >= hGX
                                    then h else na);
def gXlow = LowestAll(if   bn >= hGX && bn < hRTH
                      then l else if hRTH < hGX && bn >= hGX
                                  then l else na);

def priorGBXhigh = HighestAll(if   bn >= hPGX
                              &&   bn <  if   hGX < hRTH
                                         then hGX
                                         else hPGX
                              then h else na);
def priorGBXlow = LowestAll(if   bn >= hPGX
                            &&   bn <  if   hGX < hRTH
                                       then hGX
                                       else hPGX
                            then l else na);

def displace = -1;
def PDHigh = Highest(high(period = aggregationPeriod)[-displace], length);
def PDLow = Lowest(low(period = aggregationPeriod)[-displace], length);
def PD_Close = close(period = aggregationPeriod)[1];

def tm = SecondsFromTime(00);
def gxClose = if tm crosses below tm[1] then close[1] else gxClose[1];

def wPMD = if (HasNoGlobeX and gxClose == PD_Close) then 0 else if gXhigh > PDHigh or gXlow < PDLow then 1 else 0;

#WITHOUT PM DATA ----------------------------------------------------------

plot R6 = (highValue / lowValue) * closeValue;
plot R5 = (closeValue + range * (1.1) / 2) + 1.168 * ((closeValue + range * (1.1) / 2) â€“ (closeValue + range * (1.1) / 4));
plot R4a = closeValue + range * (1.098) / 2;
plot R4 = closeValue + range * (1.1) / 2;
plot R3 = closeValue + range * (1.1) / 4;
plot R2 = closeValue + range * (1.1) / 6;
plot R1 = closeValue + range * (1.1) / 12;
plot S1 = closeValue - range * (1.1) / 12;
plot S2 = closeValue - range * (1.1) / 6;
plot S3 = closeValue - range * (1.1) / 4;
plot S4 = closeValue - range * (1.1) / 2;
plot S4a = closeValue - range * (1.098) / 2;
plot S5 = (closeValue - range * (1.1) / 2) - 1.168 * ((closeValue - range * (1.1) / 4) - (closeValue - range * (1.1) / 2));
plot S6 = (closeValue - (R6 - closeValue));

def hidewo = ShowCams == ShowCams."w/Only" or (ShowCams == ShowCams."Auto" and wPMD is true);

R6.SetHiding(hidewo);
R5.SetHiding(hide_s5_r5 or hidewo);
R4.SetHiding(hidewo);
R4a.SetHiding(hide_s4a_r4a or hidewo);
R3.SetHiding(hidewo);
R2.SetHiding(hide_s2_r2 or hidewo);
R1.SetHiding(hide_s1_r1 or hidewo);
S1.SetHiding(hide_s1_r1 or hidewo);
S2.SetHiding(hide_s2_r2 or hidewo);
S3.SetHiding(hidewo);
S4.SetHiding(hidewo);
S4a.SetHiding(hidewo);
S5.SetHiding(hide_s5_r5 or hidewo);
S6.SetHiding(hidewo);

R6.SetDefaultColor(Color.RED);
R5.SetDefaultColor(GetColor(7));
R4.SetDefaultColor(Color.GREEN);
R4a.SetDefaultColor(Color.RED);
R3.SetDefaultColor(Color.RED);
R2.SetDefaultColor(GetColor(7));
R1.SetDefaultColor(GetColor(7));
S1.SetDefaultColor(GetColor(7));
S2.SetDefaultColor(GetColor(7));
S3.SetDefaultColor(Color.GREEN);
S4.SetDefaultColor(Color.RED);
S4a.SetDefaultColor(Color.GREEN);
S5.SetDefaultColor(GetColor(7));
S6.SetDefaultColor(Color.GREEN);

def paintingStrategy = if lines == lines.points then PaintingStrategy.POINTS else if lines == lines.triangles then PaintingStrategy.TRIANGLES else if lines == lines.dashes then PaintingStrategy.DASHES else if lines == lines.horizontal then PaintingStrategy.HORIZONTAL else PaintingStrategy.SQUARES;

R6.SetPaintingStrategy(paintingStrategy);
R5.SetPaintingStrategy(paintingStrategy);
R4.SetPaintingStrategy(paintingStrategy);
R4a.SetPaintingStrategy(paintingStrategy);
R3.SetPaintingStrategy(paintingStrategy);
R2.SetPaintingStrategy(paintingStrategy);
R1.SetPaintingStrategy(paintingStrategy);
S1.SetPaintingStrategy(paintingStrategy);
S2.SetPaintingStrategy(paintingStrategy);
S3.SetPaintingStrategy(paintingStrategy);
S4.SetPaintingStrategy(paintingStrategy);
S4a.SetPaintingStrategy(paintingStrategy);
S5.SetPaintingStrategy(paintingStrategy);
S6.SetPaintingStrategy(paintingStrategy);

#Bubbles to describe Pivot Levels w/o Premarket Data --------------------------------------


def StartPlot = if ShowBubbles == yes and ((ShowCams == ShowCams."Auto" and !wPMD is true or  aggregationPeriod != aggregationPeriod."DAY") or ShowCams == ShowCams."Both" or ShowCams == ShowCams."w/o Only") then BubbleLocation else Double.NaN;

AddChartBubble(StartPlot, R6, "R6 " + (if ShowPricesInBubbles then AsText(R6) else ""), Color.PINK,   if close > R6 then no else yes);
AddChartBubble(StartPlot and hide_s5_r5 == no, R5, "R5 " + (if ShowPricesInBubbles then AsText(R5) else ""), Color.GRAY,   if close > R5 then no else yes);
AddChartBubble(StartPlot, R4, "R4 " + (if ShowPricesInBubbles then AsText(R4) else ""), Color.ORANGE,   if close > R4 then no else yes);
AddChartBubble(StartPlot, R3, "R3 " + (if ShowPricesInBubbles then AsText(R3) else ""), Color.PINK,   if close > R3 then no else yes);
AddChartBubble(StartPlot and hide_s2_r2 == no, R2, "R2 " + (if ShowPricesInBubbles then AsText(R2) else ""), Color.GRAY,   if close > R2 then no else yes);
AddChartBubble(StartPlot and hide_s1_r1 == no, R1, "R1 " + (if ShowPricesInBubbles then AsText(R1) else ""), Color.GRAY,   if close > R1 then no else yes);
AddChartBubble(StartPlot, S6, "S6 " + (if ShowPricesInBubbles then AsText(S6) else ""), Color.LIGHT_GREEN, if close > S6 then no else yes);
AddChartBubble(StartPlot and hide_s5_r5 == no, S5, "S5 " + (if ShowPricesInBubbles then AsText(S5) else ""), Color.GRAY, if close > S5 then no else yes);
AddChartBubble(StartPlot, S4, "S4 " + (if ShowPricesInBubbles then AsText(S4) else ""), Color.ORANGE, if close > S4 then no else yes);
AddChartBubble(StartPlot, S3, "S3 " + (if ShowPricesInBubbles then AsText(S3) else ""), Color.LIGHT_GREEN, if close > S3 then no else yes);
AddChartBubble(StartPlot and hide_s2_r2 == no, S2, "S2 " + (if ShowPricesInBubbles then AsText(S2) else ""), Color.GRAY, if close > S2 then no else yes);
AddChartBubble(StartPlot and hide_s1_r1 == no, S1, "S1 " + (if ShowPricesInBubbles then AsText(S1) else ""), Color.GRAY, if close > S1 then no else yes);

R1.HideBubble();
R2.HideBubble();
R3.HideBubble();
R4.HideBubble();
R4a.HideBubble();
R5.HideBubble();
R6.HideBubble();

S1.HideBubble();
S2.HideBubble();
S3.HideBubble();
S4.HideBubble();
S4a.HideBubble();
S5.HideBubble();
S6.HideBubble();

R1.HideTitle();
R2.HideTitle();
R3.HideTitle();
R4.HideTitle();
R4a.HideTitle();
R5.HideTitle();
R6.HideTitle();

S1.HideTitle();
S2.HideTitle();
S3.HideTitle();
S4.HideTitle();
S4a.HideTitle();
S5.HideTitle();
S6.HideTitle();

#WITH PREMARKET DATA-------------------------------------------------------

#plot ExtClose = gxClose;
#plot
#PreviousHighGBX = priorGBXhigh;
#PreviousHighGBX.SetDefaultColor(Color.green);
#plot
#PreviousLowGPX  = priorGBXlow;
#PreviousLowGPX.SetDefaultColor(Color.red);
#plot
#gbxClose = gxClose;
#gbxClose.SetDefaultColor(Color.white);
#AddChartBubble(ShowBubbles && bn == cb, priorGBXhigh, "pGBX High", Color.light_green);
#AddChartBubble(ShowBubbles  && bn == cb, priorGBXlow, "pGBX Low", Color.pink,0);
#AddChartBubble(ShowBubbles  && bn == cb, gxClose, "pGBX close", Color.white,0);

#Plotting
def rangew = priorGBXhigh - priorGBXlow;
plot R6w = (priorGBXhigh / priorGBXlow) * gxClose;
plot R5w = (gxClose + rangew * (1.1) / 2) + 1.168 * ((gxClose + rangew * (1.1) / 2) â€“ (gxClose + rangew * (1.1) / 4));
plot R4wa = gxClose + rangew * (1.098) / 2;
plot R4w = gxClose + rangew * (1.1) / 2;
plot R3w = gxClose + rangew * (1.1) / 4;
plot R2w = gxClose + rangew * (1.1) / 6;
plot R1w = gxClose + rangew * (1.1) / 12;
plot S1w = gxClose - rangew * (1.1) / 12;
plot S2w = gxClose - rangew * (1.1) / 6;
plot S3w = gxClose - rangew * (1.1) / 4;
plot S4w = gxClose - rangew * (1.1) / 2;
plot S4wa = gxClose - rangew * (1.098) / 2;
plot S5w = (gxClose - rangew * (1.1) / 2) - 1.168 * ((gxClose - range * (1.1) / 4) - (gxClose - rangew * (1.1) / 2));
plot S6w = (gxClose - (R6w - gxClose));

def isSmallFutures = GetSymbol() == "/MNQ:XCME" or GetSymbol() == "/MES:XCME";
def hidew = (ShowCams == ShowCams."w/o Only") or (ShowCams == ShowCams."Auto" and (!wPMD or isSmallFutures));


R6w.SetHiding(hidew);
R5w.SetHiding(hide_s5_r5 or hidew);
R4w.SetHiding(hidew);
R4wa.SetHiding(hidew);
R3w.SetHiding(hidew);
R2w.SetHiding(hide_s2_r2 or hidew);
R1w.SetHiding(hide_s1_r1 or hidew);
S1w.SetHiding(hide_s1_r1 or hidew);
S2w.SetHiding(hide_s2_r2 or hidew);
S3w.SetHiding(hidew);
S4w.SetHiding(hidew);
S4wa.SetHiding(hide_s4a_r4a or hidew);
S5w.SetHiding(hide_s5_r5 or hidew);
S6w.SetHiding(hidew);

R6w.SetDefaultColor(Color.RED);
R5w.SetDefaultColor(GetColor(7));
R4w.SetDefaultColor(Color.GREEN);
R4wa.SetDefaultColor(Color.RED);
R3w.SetDefaultColor(Color.RED);
R2w.SetDefaultColor(GetColor(7));
R1w.SetDefaultColor(GetColor(7));
S1w.SetDefaultColor(GetColor(7));
S2w.SetDefaultColor(GetColor(7));
S3w.SetDefaultColor(Color.GREEN);
S4w.SetDefaultColor(Color.RED);
S4wa.SetDefaultColor(Color.GREEN);
S5w.SetDefaultColor(GetColor(7));
S6w.SetDefaultColor(Color.GREEN);

R6w.SetPaintingStrategy(paintingStrategy);
R5w.SetPaintingStrategy(paintingStrategy);
R4w.SetPaintingStrategy(paintingStrategy);
R4wa.SetPaintingStrategy(paintingStrategy);
R3w.SetPaintingStrategy(paintingStrategy);
R2w.SetPaintingStrategy(paintingStrategy);
R1w.SetPaintingStrategy(paintingStrategy);
S1w.SetPaintingStrategy(paintingStrategy);
S2w.SetPaintingStrategy(paintingStrategy);
S3w.SetPaintingStrategy(paintingStrategy);
S4w.SetPaintingStrategy(paintingStrategy);
S4wa.SetPaintingStrategy(paintingStrategy);
S5w.SetPaintingStrategy(paintingStrategy);
S6w.SetPaintingStrategy(paintingStrategy);

#Bubbles to describe Pivot Levels w/Premarket Data ------------------------------------

def StartPlot2 = if ShowBubbles == yes and ((ShowCams == ShowCams."Auto" and wPMD) or ShowCams == ShowCams."Both" or ShowCams == ShowCams."w/Only") then BubbleLocation else Double.NaN;

AddChartBubble(StartPlot2, R6w, "R6w " + (if ShowPricesInBubbles then AsText(R6w) else ""), Color.PINK,   if close > R6w then no else yes);
AddChartBubble(StartPlot2 and hide_s5_r5 == no, R5w, "R5w " + (if ShowPricesInBubbles then AsText(R5w) else ""), Color.GRAY,   if close > R5w then no else yes);
AddChartBubble(StartPlot2, R4w, "R4w " + (if ShowPricesInBubbles then AsText(R4w) else ""), Color.ORANGE,   if close > R4w then no else yes);
AddChartBubble(StartPlot2, R3w, "R3w " + (if ShowPricesInBubbles then AsText(R3w) else ""), Color.PINK,   if close > R3w then no else yes);
AddChartBubble(StartPlot2 and hide_s2_r2 == no, R2w, "R2w " + (if ShowPricesInBubbles then AsText(R2w) else ""), Color.GRAY,   if close > R2w then no else yes);
AddChartBubble(StartPlot2 and hide_s1_r1 == no, R1w, "R1w " + (if ShowPricesInBubbles then AsText(R1w) else ""), Color.GRAY,   if close > R1w then no else yes);

AddChartBubble(StartPlot2, S6w, "S6w " + (if ShowPricesInBubbles then AsText(S6w) else ""), Color.LIGHT_GREEN, if close > S6w then no else yes);
AddChartBubble(StartPlot2 and hide_s5_r5 == no, S5w, "S5w " + (if ShowPricesInBubbles then AsText(S5w) else ""), Color.GRAY, if close > S5w then no else yes);
AddChartBubble(StartPlot2, S4w, "S4w " + (if ShowPricesInBubbles then AsText(S4w) else ""), Color.ORANGE, if close > S4w then no else yes);
AddChartBubble(StartPlot2, S3w, "S3w " + (if ShowPricesInBubbles then AsText(S3w) else ""), Color.LIGHT_GREEN, if close > S3w then no else yes);
AddChartBubble(StartPlot2 and hide_s2_r2 == no, S2w, "S2w " + (if ShowPricesInBubbles then AsText(S2w) else ""), Color.GRAY, if close > S2w then no else yes);
AddChartBubble(StartPlot2 and hide_s1_r1 == no, S1w, "S1w " + (if ShowPricesInBubbles then AsText(S1w) else ""), Color.GRAY, if close > S1w then no else yes);

R1w.HideBubble();
R2w.HideBubble();
R3w.HideBubble();
R4w.HideBubble();
R4wa.HideBubble();
R5w.HideBubble();
R6w.HideBubble();

S1w.HideBubble();
S2w.HideBubble();
S3w.HideBubble();
S4w.HideBubble();
S4wa.HideBubble();
S5w.HideBubble();
S6w.HideBubble();

R1w.HideTitle();
R2w.HideTitle();
R3w.HideTitle();
R4w.HideTitle();
R4wa.HideTitle();
R5w.HideTitle();
R6w.HideTitle();

S1w.HideTitle();
S2w.HideTitle();
S3w.HideTitle();
S4w.HideTitle();
S4wa.HideTitle();
S5w.HideTitle();
S6w.HideTitle();

#Floor Pivots Add-on------------------------------------------------------------------
def PH = high(period = aggregationPeriod)[1];
def PL = low(period = aggregationPeriod)[1];
def PC = close(period = aggregationPeriod)[1];
def PP = (PH + PL + PC) / 3.0;
def bc = (PH + PL) / 2.0;
def tc = (PP - bc) + PP;

plot FR4 = PH + (3 * (PP - PL));
plot FR3 = PH + (2 * (PP - PL));
plot CP = PP;
plot FS3 = PL - (2 * (PH - PP));
plot FS4 = PL - (3 * (PH - PP));


FR4.SetHiding(hide_Floor_Pivots);
FR3.SetHiding(hide_Floor_Pivots);
CP.SetHiding(hide_Floor_Pivots);
FS3.SetHiding(hide_Floor_Pivots);
FS4.SetHiding(hide_Floor_Pivots);

FR4.SetDefaultColor(CreateColor(102, 0, 204));
FR3.SetDefaultColor(Color.MAGENTA);
CP.SetDefaultColor(Color.YELLOW);
FS3.SetDefaultColor(Color.MAGENTA);
FS4.SetDefaultColor(CreateColor(102, 0, 204));

FR4.SetPaintingStrategy(paintingStrategy);
FR3.SetPaintingStrategy(paintingStrategy);
CP.SetPaintingStrategy(paintingStrategy);
FS3.SetPaintingStrategy(paintingStrategy);
FS4.SetPaintingStrategy(paintingStrategy);

def StartPlot3 = if ShowBubbles == yes and hide_Floor_Pivots == no then BubbleLocation else Double.NaN;

AddChartBubble(StartPlot3, CP, "CP " + (if ShowPricesInBubbles then AsText(CP) else ""), Color.YELLOW,   if close > CP then no else yes);
AddChartBubble(StartPlot3, FR4, "FR4 " + (if ShowPricesInBubbles then AsText(FR4) else ""), (CreateColor(102, 0, 204)), if close > FR4 then no else yes);
AddChartBubble(StartPlot3, FR3, "FR3 " + (if ShowPricesInBubbles then AsText(FR3) else ""), Color.MAGENTA,   if close > FR3 then no else yes);
AddChartBubble(StartPlot3, FS4, "FS4 " + (if ShowPricesInBubbles then AsText(FS4) else ""), (CreateColor(102, 0, 204)), if close > FS4 then no else yes);
AddChartBubble(StartPlot3, FS3, "FS3 " + (if ShowPricesInBubbles then AsText(FS3) else ""), Color.MAGENTA, if close > FS3 then no else yes);

FR4.HideBubble();
FR3.HideBubble();
CP.HideBubble();
FS3.HideBubble();
FS4.HideBubble();

FR4.HideTitle();
FR3.HideTitle();
CP.HideTitle();
FS3.HideTitle();
FS4.HideTitle();

#Adds Clouds to PivotPoints ------------------------------------------------------------------

AddCloud (if hidew then R3 else R3w, if hidew then R4 else R4w, Color.LIGHT_RED, Color.LIGHT_RED);
AddCloud (if hidew then S3 else S3w, if hidew then S4 else S4w, Color.LIGHT_GREEN, Color.LIGHT_GREEN);
AddCloud (if ShowCams."Both" then R3 else Double.NaN, R4 , Color.LIGHT_RED, Color.LIGHT_RED);
AddCloud (if ShowCams."Both" then R3w else Double.NaN, R4w, Color.LIGHT_RED, Color.LIGHT_RED);
AddCloud (if ShowCams."Both" then S3 else Double.NaN, S4 , Color.LIGHT_GREEN, Color.LIGHT_GREEN);
AddCloud (if ShowCams."Both" then S3w else Double.NaN, S4w , Color.LIGHT_GREEN, Color.LIGHT_GREEN);



##########################################################################################
# L3sli3 NEW SECTION (ATR / PR / DR / RVOL / WIDE / NARROW) LABELS
##########################################################################################

def currentTime = GetTime();
def today = GetYYYYMMDD();

# Detailed time checks
def isPreMarket = currentTime < RegularTradingStart(today);
def isAfterHours = currentTime > RegularTradingEnd(today);
def isMarketOpen = !isPreMarket && !isAfterHours;
def pretime = isPreMarket or isAfterHours;

# Get the close of two periods ago
def closeTwoPeriodsAgo = close(period = aggregationPeriod)[2];

# Get the close of the previous day
def closePrevPeriod = close(period = aggregationPeriod)[1];

# Get Today's Values
##########################################################################################
# Get Today's Pre-Market High and Low
def preMarketHi = if !pretime[1] and pretime then high
       else if pretime and high > preMarketHi[1] then high
       else preMarketHi[1];

def preMarketLow = if !pretime[1] and pretime then low
  else if pretime and low < preMarketLow[1] then low
  else preMarketLow[1];

# Get Today's High and Low
def todayHigh = Round(if IsNaN(high(period = aggregationPeriod)) then preMarketHi else high(period = aggregationPeriod), 2);
def todayLow  = Round(if IsNaN(low(period = aggregationPeriod)) then preMarketLow else low(period = aggregationPeriod), 2);

def todayHighW = Round(Max( if IsNaN(high(period = aggregationPeriod)) then preMarketHi else high(period = aggregationPeriod), preMarketHi), 2);
def todayLowW  = Round(Min ( if IsNaN(low(period = aggregationPeriod)) then preMarketLow else low(period = aggregationPeriod), preMarketLow), 2);

#Calculate Pivot Ranges
def pivots4RangeWith = Round(R4w - S4w, 2);
def pivots4RangeWithout = Round(R4 - S4, 2);
##########################################################################################

#Get ATR
##########################################################################################
# Input Parameters
input ATR_averageType = AverageType.WILDERS; #Wilders matches ToS ATR that shows in watchlist for tickers
input ATR_length = 14;


# Get Daily ATR
def ATR = if !pretime then MovingAverage(ATR_averageType, TrueRange( high(period = aggregationPeriod), 
                                               close(period = aggregationPeriod), 
                                               low(period = aggregationPeriod)), ATR_length) 
               else MovingAverage(ATR_averageType, TrueRange( high(period = aggregationPeriod)[1], 
                                               close(period = aggregationPeriod)[1], 
                                               low(period = aggregationPeriod)[1]), ATR_length);

def isWideRangeDay = if ATR <= (if wPMD then pivots4RangeWith else pivots4RangeWithout) then 1 else 0;


#GET RVOL (DAILY)
##########################################################################################
input RVOLLength = 14;
input showRVOLInPercent = No;
def todayVol = volume(period = aggregationPeriod);
def averageVolume = Average(volume(period = aggregationPeriod), RVOLLength);
def rvol = Round(todayVol / averageVolume, 2);
def rvolPercent = Round(rvol * 100, 2);

# Display Data
##########################################################################################

#Label Colors For The Different Labels
DefineGlobalColor("wPMD Label Color", Color.BLUE);
DefineGlobalColor("w/oPMD Label Color", Color.DARK_ORANGE);
DefineGlobalColor("ATR Label Color", Color.BLACK);
DefineGlobalColor("Wide Day Label Color", Color.BLUE);
DefineGlobalColor("Narrow Day Label Color", Color.DARK_ORANGE);
DefineGlobalColor("Cams Higher Range Label Color", Color.DARK_GREEN);
DefineGlobalColor("Cams Lower Range Label Color", Color.RED);
DefineGlobalColor("Cams Neutral Range Label Color", Color.YELLOW);
DefineGlobalColor("RVOL Label At or Above 100% Color", Color.DARK_GREEN);
DefineGlobalColor("RVOL Label Below 100% Color", Color.DARK_RED);

#Pre-Market Data Indicator
AddLabel (PMD_Indicator_Label, if wPMD then "w/PMD" else "w/o PMD", if wPMD then GlobalColor("wPMD Label Color") else GlobalColor("w/oPMD Label Color"));

#Wide vs Narrow Label
AddLabel(yes, if isWideRangeDay then "Wide" else "Narrow", if isWideRangeDay then GlobalColor("Wide Day Label Color") else GlobalColor("Narrow Day Label Color"));

# Period Range Type
AddLabel(yes, if closePrevPeriod > closeTwoPeriodsAgo then "Cams: Higher Range"
         else if closePrevPeriod < closeTwoPeriodsAgo then "Cams: Lower Range"
         else "Cams: Neutral Range",
         if closePrevPeriod > closeTwoPeriodsAgo then GlobalColor("Cams Higher Range Label Color")
         else if closePrevPeriod < closeTwoPeriodsAgo then GlobalColor("Cams Lower Range Label Color")
         else GlobalColor("Cams Neutral Range Label Color"));

#ATR Label
AddLabel(yes, "ATR(" + ATR_length + "): " + Round(ATR, 2) + 
              " | PR: " + (if wPMD then pivots4RangeWith else pivots4RangeWithout) +
#              " | DR: " + (if wPMD then ROUND(todayHighW - todayLowW,2) else ROUND(todayHigh - todayLow, 2)) 
             " | DR: " + (if isPreMarket then 0 else Round(todayHigh - todayLow, 2)) 
            , GlobalColor("ATR Label Color"));

AddLabel(yes, "Symbol: " + GetSymbol(), Color.CYAN);

#AddLabel(yes, "highValue:" + highValue, Color.DARK_GREEN);
#AddLabel(yes, "lowValue:" + lowValue, Color.DARK_GREEN);
#AddLabel(yes, "closeValue:" + closeValue, Color.DARK_GREEN);

#AddLabel(yes, "tm:" + tm, Color.DARK_GREEN);
#AddLabel(yes, "tm[1]:" + tm[1], Color.DARK_GREEN);
#AddLabel(yes, "close[1]:" + close[1], Color.DARK_GREEN);

#AddLabel(yes, "gxClose[1]:" + gxClose[1], Color.DARK_GREEN);
#AddLabel(yes, "SecondsFromTime(00)[1]:" + SecondsFromTime(00)[1], Color.DARK_GREEN);

#AddLabel(yes, "close(period = aggregationPeriod)[1]:" + close(period = aggregationPeriod)[1], #Color.DARK_GREEN);

#AddLabel(yes, "priorGBXhigh:" + priorGBXhigh, Color.DARK_GREEN);
#AddLabel(yes, "priorGBXlow:" + priorGBXlow, Color.DARK_GREEN);
#AddLabel(yes, "gxClose:" + gxClose, Color.DARK_GREEN);
#RVOL
#AddLabel(yes, "RVOL(" + RVOLLength + "): " + (if showRVOLInPercent then Round(rvolPercent,2) #else rvol) + (if showRVOLInPercent then "%" else ""), if rvol < 1 then GlobalColor("RVOL Label #Below 100% Color") else GlobalColor("RVOL Label At or Above 100% Color"));
#Keep label below to troubleshoot RVOL
#AddLabel(yes, "RVOL: " + (if showRVOLInPercent then Round(rvolPercent,2) else rvol) + " Today #Vol: " + TodayVol + " Avg: " + averageVolume, Color.BLUE);